<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice.mapper">

<insert id="reply_insert">
<!-- 원글의 root와 root가 같고, 원글의 step보다 더 큰 step을 가진 글에 대해서는 +1 먼저 한다. > 표현을 위해 CDATA처리 -->
<![CDATA[
{call declare begin
update notice set step = step+1 where root=#{root} and step > #{step}; 

insert into notice (id, root, title, content, writer, step, indent, filename, filepath)
values (seq_notice.nextval, #{root}, #{title}, #{content}, #{writer}
		, #{step}+1, #{indent}+1, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR});
end}
]]>
</insert>


<update id="update">
update notice set title= #{title}, content=#{content}, filename=#{filename, jdbcType=VARCHAR}, filepath=#{filepath, jdbcType=VARCHAR} where id=#{id}
</update>

<delete id="delete">
delete from notice where id=#{id}
</delete>

<update id="read">
update notice set readcnt = readcnt+1 where id=#{id}
</update>

<select id="detail" resultType="notice.NoticeVO">
select n.*, (select name from member m where m.id = n.writer) name from notice n where id=#{id}
</select>

<insert id="insert">
insert into notice (id, root, title, content, writer, filename, filepath)
values (seq_notice.nextval, seq_notice.currval, #{title}, #{content}, #{writer}, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR})
</insert>

<select id="list" resultType="notice.NoticeVO">
select * from
	(select rownum no, n.*, (select name from member m where m.id = writer) name from
	(select * from notice order by root, step desc) n 
	order by no desc) n
where no between #{beginList} and #{endList}
</select>

<select id="totalList" resultType="integer">
select count(*) from notice
</select>

</mapper>